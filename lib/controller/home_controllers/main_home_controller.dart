import 'package:flutter/services.dart';import 'package:get/get.dart';import 'package:flutter/material.dart';import 'package:our_building/controller/theme_controller/theme_controller.dart';import 'package:our_building/core/class/app_data/app_assets.dart';import 'package:our_building/core/class/app_data/app_theme.dart';import 'package:our_building/core/class/extentions/size-config-extentions.dart';import 'package:our_building/core/class/helper_local_data/hive_helper.dart';import 'package:our_building/core/functions/logOut_func.dart';import 'package:our_building/view/screens/home_screens/home/home_services_screen/choose_services_screen.dart';import 'package:flutter_svg/svg.dart';import 'package:our_building/view/screens/home_screens/home/notifications/notification_screen.dart';import 'package:our_building/view/screens/home_screens/home/spare/spare_screen.dart';import '../../core/class/size_config/size_config.dart';import '../../core/functions/transitions.dart';import '../../view/screens/auth/choose_auth_way_screen.dart';import '../../view/screens/home_screens/home/profile/profile_screen.dart';import '../../view/widgets/custom_public_widgets/custom_glass_widget.dart';import '../../view/widgets/custom_public_widgets/custom_text.dart';class MainHomeController extends GetxController {  changeIndex(int index) {    currentIndex = index;    update();  }  List<Widget> screens = [    const ChooseServicesHomeScreen(),    const SpareScreen(),    const NotificationScreen(),    const ProfileScreen(),  ];  List<String> appBarTitles = [    'الرئيسية',    'الفائض',    'الإشعارات',    'الملف الشخصي',  ];  int currentIndex = 0;  List<BottomNavigationBarItem> bottomNavItem = [    BottomNavigationBarItem(      icon: SvgPicture.asset(        AppAssets.homeIcon,        color: Colors.white,      ),      label: 'الرئيسية',    ),    BottomNavigationBarItem(      label: 'الفائض',      icon: SvgPicture.asset(        color: Colors.white,        AppAssets.spareIcon,      ),    ),    BottomNavigationBarItem(      label: 'الإشعارات',      icon: SvgPicture.asset(        color: Colors.white,        AppAssets.chatIcon,      ),    ),    BottomNavigationBarItem(      label: 'حسابي',      icon: SvgPicture.asset(        color: Colors.white,        AppAssets.profileIcon,      ),    ),  ];  Future<bool> showSettings(context) async {    ThemeController controller = Get.put(ThemeController());    final shouldPop = await showDialog<bool>(      context: context,      builder: (context) {        return alertDialog2(context);      },    );    return shouldPop!;  }  Future<bool> willPopScop(context) async {    final shouldPop = await showDialog<bool>(      context: context,      builder: (context) {        return AlertDialog(          shape: RoundedRectangleBorder(            borderRadius: BorderRadius.circular(15),          ),          // backgroundColor: AppColor.mainAppColor,          elevation: 15,          shadowColor: Colors.grey,          title: CustomText('هل أنت متأكد من الخروج ؟', 14, Colors.black),          actionsAlignment: MainAxisAlignment.spaceBetween,          actions: [            TextButton(              onPressed: () {                Navigator.pop(context, true);              },              child: CustomText('نعم', 14, Colors.red),            ),            TextButton(              onPressed: () {                Navigator.pop(context, false);              },              child: CustomText('لا', 14, Colors.black),            ),          ],        );      },    );    return shouldPop!;  }  @override  void onInit() {    // TODO: implement onInit    SystemChrome.setSystemUIOverlayStyle(      const SystemUiOverlayStyle(statusBarColor: Colors.transparent),    );    super.onInit();  }}AlertDialog alertDialog2(context) {  final ThemeController controller = Get.find();  return AlertDialog(    elevation: 10,    backgroundColor: Theme.of(context).scaffoldBackgroundColor,    shape: RoundedRectangleBorder(      borderRadius: BorderRadius.circular(15),    ),    title: CustomText(        'إعدادات', 16, Theme.of(context).textTheme.titleLarge!.color!),    content: SingleChildScrollView(      child: SizedBox(        width: SizeConfig.screenWidth - 100.w,        child: Column(          mainAxisSize: MainAxisSize.min, // تجعل العناصر تمتد حسب المحتوى          children: <Widget>[            CustomCardAlertDialog(              title: 'تسجيل خروج',              icon: const Icon(                Icons.logout,                color: Colors.red,              ),              fun: () {                signOut(                    context); // ScaffoldMessenger.of(context).showSnackBar( //   const SnackBar( //     duration: Duration(milliseconds: 1500), //     content: Text('قيد التطوير'), //   ), // );              },            ),            CustomCardAlertDialog(              title: 'تغيير الثيم',              icon: Icon(                Icons.dark_mode_outlined,                color: Theme.of(context).textTheme.titleLarge!.color!,              ),              fun: () {                controller.changeTheme(                    context); // ScaffoldMessenger.of(context).showSnackBar( //   const SnackBar( //     duration: Duration(milliseconds: 1500), //     content: Text('قيد التطوير'), //   ), // );              },            ),          ],        ),      ),    ),    actions: <Widget>[      Align(        alignment: Alignment.center,        child: TextButton(          onPressed: () {            Navigator.pop(context, false);          },          child: Padding(            padding: const EdgeInsets.symmetric(              horizontal: 10,            ),            child: CustomText('إغلاق', 14, Colors.red),          ),        ),      ),    ],  );}class CustomCardAlertDialog extends StatelessWidget {  final String title;  final Icon icon;  final Function()? fun;  const CustomCardAlertDialog({    super.key,    required this.title,    required this.icon,    required this.fun,  });  @override  Widget build(BuildContext context) {    return Card(      shape: RoundedRectangleBorder(        borderRadius: BorderRadius.circular(15),      ),      color: Theme.of(context).cardColor,      elevation: 5,      margin: EdgeInsets.symmetric(        vertical: SizeConfig.scaleHeight(10),      ),      child: ListTile(        onTap: fun,        title: CustomText(            title, 14, Theme.of(context).textTheme.titleLarge!.color!),        trailing: icon,      ),    );  }}