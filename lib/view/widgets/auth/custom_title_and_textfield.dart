// ignore_for_file: unused_local_variableimport 'package:flutter/material.dart';import '../../../core/class/app_data/app_color.dart';import '../../../core/class/size_config/size_config.dart';import '../../../core/functions/spaces.dart';// ignore: must_be_immutableclass CustomTitleAndTextField extends StatefulWidget {  String title;  String hint;  // String iconPath;  TextEditingController controller;  TextInputType textInputType;  bool isPass;  // قيمة تحدد هل يقبل الثيم ام لا  // في واجهات تسجيل الدخول لا يوجد ثيم  // اما في الواجهات الرئيسية يوجد ثيم  bool acceptedTheme;  CustomTitleAndTextField(      this.title,      this.hint,      this.controller,      // this.iconPath,      this.textInputType,      this.isPass,      {this.acceptedTheme = true});  @override  State<CustomTitleAndTextField> createState() =>      CustomTitleAndTextFieldState();}class CustomTitleAndTextFieldState extends State<CustomTitleAndTextField> {  final FocusNode _focusNode = FocusNode();  @override  void dispose() {    _hideKeyboard();    _focusNode.dispose();    // تحرير الموارد عند انتهاء الصفحة    super.dispose();  }  void _hideKeyboard() {    _focusNode.unfocus(); // إخفاء لوحة المفاتيح عن طريق إزالة التركيز  }  bool isVisibility = false;  IconData iconData = Icons.visibility;  changeVisibility() {    setState(() {      if (isVisibility) {        isVisibility = false;        iconData = Icons.visibility;      } else {        isVisibility = true;        iconData = Icons.visibility_off;      }    });  }  @override  Widget build(BuildContext context) {    Color backColor =        widget.acceptedTheme ? Theme.of(context).cardColor : Colors.white70;    Color fontColor = widget.acceptedTheme        ? Theme.of(context).textTheme.titleLarge!.color!        : Colors.black;    Color titleColor = widget.acceptedTheme        ? Theme.of(context).textTheme.titleLarge!.color!        : Colors.black;    return Padding(      padding: EdgeInsets.only(        top: SizeConfig.scaleHeight(20),      ),      child: SizedBox(          child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          Text(            widget.title,            style: TextStyle(              fontFamily: 'Tajawal',              color: titleColor,              fontSize: SizeConfig.scaleTextFont(12),              fontWeight: FontWeight.w500,            ),          ),          spaceH(10),          Container(            height: SizeConfig.scaleHeight(50),            width: double.infinity,            decoration: BoxDecoration(              color: backColor,              borderRadius: BorderRadius.circular(8),              // border: Border.all(              //   color: const Color(0xFFf6f6f6),              //   width: 1,              // ),            ),            child: TextFormField(              focusNode: _focusNode,              style: TextStyle(                fontFamily: 'Tajawal',                fontSize: SizeConfig.scaleTextFont(12),                color: fontColor,                fontWeight: FontWeight.w500,              ),              obscureText: isVisibility,              keyboardType: widget.textInputType,              controller: widget.controller,              decoration: InputDecoration(                suffixIcon: widget.isPass                    ? IconButton(                        onPressed: () {                          changeVisibility();                        },                        icon: Icon(iconData),                      )                    : null,                // prefixIcon: Image.asset('assets/icons/${widget.iconPath}'),                focusedBorder: widget.acceptedTheme == false                    ? OutlineInputBorder(                        // حدود خارجية عندما يتم تحديد الحقل                        borderSide: BorderSide(color: AppColor.mainAppColor),                      )                    : null,                border: widget.acceptedTheme == false                    ? const OutlineInputBorder(                        borderSide: BorderSide(                          color: Color(0xFFf6f6f6),                        ),                      )                    : null,                hintText: '   ${widget.hint}  ',                hintStyle: TextStyle(                  height: SizeConfig.scaleHeight(3.5),                  fontSize: SizeConfig.scaleTextFont(12),                  color: Colors.grey,                  fontFamily: 'Tajawal',                ),              ),            ),          ),        ],      )),    );  }}